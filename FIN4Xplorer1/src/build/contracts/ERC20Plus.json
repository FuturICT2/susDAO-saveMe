{
  "contractName": "ERC20Plus",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals_",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isBurnable_",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isTransferable_",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isMintable_",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "initialSupplyOwner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isBurnable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isMintable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isTransferable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isBurnable_\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isTransferable_\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isMintable_\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialSupplyOwner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isBurnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isMintable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isTransferable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 Token, where all tokens (INITIAL_SUPPLY) are pre-assigned to the creator. Note they can later distribute these tokens as they wish using `transfer` and other `ERC20` functions. Depending on the parameters provided, this token can be mintable, burnable and/or pausable (non-transferable).\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns a specific amount of tokens.\",\"params\":{\"value\":\"The amount of token to be burned.\"}},\"burnFrom(address,uint256)\":{\"details\":\"Burns a specific amount of tokens from the target address and decrements allowance\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"value\":\"uint256 The amount of token to be burned\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"value\":\"The amount of tokens to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state. This means functions transfer, transferFrom, approve, increaseAllowance, and decreasAllowance, will not execute.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"unpause()\":{\"details\":\"This will undo pause(). The purpose of this declaration is to disable this function, as this function must not be called (unless making an untransferable token transferable again is wanted, but this is currently not an offered feature).\"}},\"title\":\"ERC20Plus\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/cantonioupao/susDAO-saveMe/FIN4Contracts/contracts/tokens/ERC20Plus.sol\":\"ERC20Plus\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/cantonioupao/susDAO-saveMe/FIN4Contracts/contracts/tokens/ERC20Plus.sol\":{\"keccak256\":\"0x5dcfdda9dfec8e76f8b6acefb38b5143b662fefc1d144fbedf72d407ce550452\",\"urls\":[\"bzz-raw://952a994f392d9f5b994bc89ec9e4067f161d534ff4c0694fd2de242dd2dd7964\",\"dweb:/ipfs/QmVDrorFYzky3WdGGcLRiK7cE8Bzko6qKYXghqNy8hW6NK\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"@openzeppelin/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xbe8eef6f2cb4e427f5c5d8a76865ccd06e55a4f1d6671ba312d45bfa705aedbf\",\"urls\":[\"bzz-raw://badf338a5e22c8658c01fe2ce89b487d9dbf6d2d9d5eb49df7415383e2498765\",\"dweb:/ipfs/QmP5aMkvFwMJyuQjKE8ADh5tkWYqonb4KjgkAjgYEVVFAv\"]},\"@openzeppelin/contracts/access/roles/PauserRole.sol\":{\"keccak256\":\"0xd1b5c934bab36d753c22987ad98c7614cb50ebf641371a83c96f8138619d7c30\",\"urls\":[\"bzz-raw://69c4bb822caae3d1bfd38e81f03b6d618d4d83cbb8e9f8236d28e1c4fe1d0d81\",\"dweb:/ipfs/QmWamstbFhdySmocF2TSKYVLLZF24JG4aXMvHiRdWKv3RA\"]},\"@openzeppelin/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0xd3e5a49edfb74654d122962cc60b917d1c60461e669a7262fd7aba201fac1260\",\"urls\":[\"bzz-raw://0307a3cae4df037aee16fb0b0d94849cb4d9b20d7d7182c185f3efac6d2caec0\",\"dweb:/ipfs/QmezTANBfrJmCvxfmfyfcfFGtbcUEUtoJCjfxKnAePiNoE\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb15af804e2bc97db51e4e103f13de9fe13f87e6b835d7a88c897966c0e58506e\",\"urls\":[\"bzz-raw://1e8cff8437557fc915a3bed968fcd8f2df9809599e665ef69c2c9ce628548055\",\"dweb:/ipfs/QmP5spYP8vs2jvLF8zNrXUbqB79hMsoEvMHiLcBxerWKcm\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x9b94356691f3cbf90a5d83ae3fdf6a5a662bb004d2bd8b034160d60221807e64\",\"urls\":[\"bzz-raw://14a9d33db455302b8bb9fdb28998efefbe5a1cb41b29e31391609f646b2ab351\",\"dweb:/ipfs/Qmd4wFr6GEMZnnxgXeq3gmp7cs8tqDuHp3TVNhCbjnux2V\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":{\"keccak256\":\"0x3e16a2b94ce6f97bb34ac27b84fab51fdceaadca0358766874dddff316491268\",\"urls\":[\"bzz-raw://a2736ffca3c121a5734e3032b3b1711f224a37a874dd8e5ea14431afbaae327a\",\"dweb:/ipfs/QmRwTS5zu9JeHGad1HUVrSddpFM8R23e6Xas4cTZTMxHty\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x4a3a810b7ebe742e897e1fd428b3eeed2196d3acea58eaf9c566ed10d545d2ed\",\"urls\":[\"bzz-raw://28d03f328e19e4099d5013de0649afaeaabac1a614e130767ab1cb4aca9775b6\",\"dweb:/ipfs/Qmb9iW7yNuYehB2NfhRMs9TakqbLVQhBhmGMkaDZ5g1Eb4\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xa2b957cf89692c504962afb7506999155f83385373f808243246cd5879de5940\",\"urls\":[\"bzz-raw://c44ae0ad1bce141c33b962f8b4e9228bdf8df36c8ac363b4f0bf9498b8bfc32a\",\"dweb:/ipfs/QmcSBRdFwVvy2wFZrBwo5cvqNP4UHh9Eyzf8jnxBgnPqfe\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":{\"keccak256\":\"0xd5ae72078a1c90af870e1b9b86b0fc05eb14b4034e417bc66d151d3eb4d342ca\",\"urls\":[\"bzz-raw://32a5f0d4de7c26125441e9b78a49de90cd30c467216fb8f69dc0b1f03c6e253c\",\"dweb:/ipfs/QmcuFRFJ4KNkvYRAmcs1t1fap1i3rRbJghWGqiaSNafdjp\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
  "bytecode": "0x60806040526008805460ff60201b19166401000000001790553480156200002557600080fd5b506040516200214c3803806200214c83398181016040526101208110156200004c57600080fd5b81019080805160405193929190846401000000008211156200006d57600080fd5b9083019060208201858111156200008357600080fd5b82516401000000008111828201881017156200009e57600080fd5b82525081516020918201929091019080838360005b83811015620000cd578181015183820152602001620000b3565b50505050905090810190601f168015620000fb5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011f57600080fd5b9083019060208201858111156200013557600080fd5b82516401000000008111828201881017156200015057600080fd5b82525081516020918201929091019080838360005b838110156200017f57818101518382015260200162000165565b50505050905090810190601f168015620001ad5780820380516001836020036101000a031916815260200191505b506040908152602082810151918301516060840151608085015160a086015160c087015160e0909701518b519699509397509195909491939092918a918a918a91620001ff91600091860190620007d4565b50815162000215906001906020850190620007d4565b506002805460ff191660ff92909216919091179055506200024a90506200023b6200033c565b6001600160e01b036200034116565b62000270620002616001600160e01b036200033c16565b6001600160e01b036200039316565b6008805461ffff1916610100871515021762ff0000191662010000861515021763ff000000191663010000008515150217905583620002bc57620002bc6001600160e01b03620003e516565b6001600160a01b03861615620002e057620002e0866001600160e01b036200034116565b6001600160a01b0381166200030a576200030433836001600160e01b036200044716565b6200031f565b6200031f81836001600160e01b036200044716565b50506008805460ff60201b19169055506200087695505050505050565b335b90565b6200035c8160066200054c60201b6200151f1790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b620003ae8160076200054c60201b6200151f1790919060201c565b6040516001600160a01b038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b600854640100000000900460ff16620004305760405162461bcd60e51b8152600401808060200182810382526029815260200180620021236029913960400191505060405180910390fd5b62000445620005d960201b62000d451760201c565b565b6001600160a01b038216620004a3576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b620004bf81600554620006e660201b6200121c1790919060201c565b6005556001600160a01b038216600090815260036020908152604090912054620004f49183906200121c620006e6821b17901c565b6001600160a01b03831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6200056182826001600160e01b036200074816565b15620005b4576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b620005ff620005f06001600160e01b036200033c16565b6001600160e01b03620007b116565b6200063c5760405162461bcd60e51b8152600401808060200182810382526030815260200180620020d16030913960400191505060405180910390fd5b60085460ff161562000688576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6008805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258620006c96001600160e01b036200033c16565b604080516001600160a01b039092168252519081900360200190a1565b60008282018381101562000741576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60006001600160a01b038216620007915760405162461bcd60e51b8152600401808060200182810382526022815260200180620021016022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6000620007ce8260076200074860201b62000c401790919060201c565b92915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200081757805160ff191683800117855562000847565b8280016001018555821562000847579182015b82811115620008475782518255916020019190600101906200082a565b506200085592915062000859565b5090565b6200033e91905b8082111562000855576000815560010162000860565b61184b80620008866000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80636ef8d66d116100de57806395d89b4111610097578063a457c2d711610071578063a457c2d714610441578063a9059cbb1461046d578063aa271e1a14610499578063dd62ed3e146104bf5761018e565b806395d89b411461040b578063983b2d561461041357806398650275146104395761018e565b80636ef8d66d1461037b57806370a082311461038357806379cc6790146103a957806382dc1ec4146103d55780638456cb59146103fb578063883356d9146104035761018e565b8063395093511161014b57806342966c681161012557806342966c681461032857806346b45af71461034557806346fbf68e1461034d5780635c975abb146103735761018e565b806339509351146102c65780633f4ba83a146102f257806340c10f19146102fc5761018e565b806306fdde0314610193578063095ea7b31461021057806318160ddd146102505780632121dc751461026a57806323b872dd14610272578063313ce567146102a8575b600080fd5b61019b6104ed565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101d55781810151838201526020016101bd565b50505050905090810190601f1680156102025780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61023c6004803603604081101561022657600080fd5b506001600160a01b038135169060200135610583565b604080519115158252519081900360200190f35b6102586105e2565b60408051918252519081900360200190f35b61023c6105e8565b61023c6004803603606081101561028857600080fd5b506001600160a01b038135811691602081013590911690604001356105f7565b6102b0610658565b6040805160ff9092168252519081900360200190f35b61023c600480360360408110156102dc57600080fd5b506001600160a01b038135169060200135610661565b6102fa6106b9565b005b61023c6004803603604081101561031257600080fd5b506001600160a01b038135169060200135610704565b6102fa6004803603602081101561033e57600080fd5b5035610763565b61023c6107bf565b61023c6004803603602081101561036357600080fd5b50356001600160a01b03166107cf565b61023c6107e8565b6102fa6107f1565b6102586004803603602081101561039957600080fd5b50356001600160a01b0316610801565b6102fa600480360360408110156103bf57600080fd5b506001600160a01b03813516906020013561081c565b6102fa600480360360208110156103eb57600080fd5b50356001600160a01b031661087a565b6102fa6108ce565b61023c61091f565b61019b61092d565b6102fa6004803603602081101561042957600080fd5b50356001600160a01b031661098d565b6102fa6109e1565b61023c6004803603604081101561045757600080fd5b506001600160a01b0381351690602001356109f1565b61023c6004803603604081101561048357600080fd5b506001600160a01b038135169060200135610a49565b61023c600480360360208110156104af57600080fd5b50356001600160a01b0316610aa1565b610258600480360360408110156104d557600080fd5b506001600160a01b0381358116916020013516610ab4565b60008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105795780601f1061054e57610100808354040283529160200191610579565b820191906000526020600020905b81548152906001019060200180831161055c57829003601f168201915b5050505050905090565b60085460009060ff16156105d1576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6105db8383610adf565b9392505050565b60055490565b60085462010000900460ff1681565b60085460009060ff1615610645576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b610650848484610afc565b949350505050565b60025460ff1690565b60085460009060ff16156106af576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6105db8383610b89565b600854640100000000900460ff166107025760405162461bcd60e51b81526004018080602001828103825260298152602001806117c96029913960400191505060405180910390fd5b565b6008546000906301000000900460ff16610759576040805162461bcd60e51b8152602060048201526011602482015270436f696e206e6f74206d696e7461626c6560781b604482015290519081900360640190fd5b6105db8383610bdd565b600854610100900460ff166107b3576040805162461bcd60e51b8152602060048201526011602482015270436f696e206e6f74206275726e61626c6560781b604482015290519081900360640190fd5b6107bc81610c2f565b50565b6008546301000000900460ff1681565b60006107e260078363ffffffff610c4016565b92915050565b60085460ff1690565b6107026107fc610ca7565b610cab565b6001600160a01b031660009081526003602052604090205490565b600854610100900460ff1661086c576040805162461bcd60e51b8152602060048201526011602482015270436f696e206e6f74206275726e61626c6560781b604482015290519081900360640190fd5b6108768282610cf3565b5050565b61088a610885610ca7565b6107cf565b6108c55760405162461bcd60e51b81526004018080602001828103825260308152602001806116286030913960400191505060405180910390fd5b6107bc81610cfd565b600854640100000000900460ff166109175760405162461bcd60e51b81526004018080602001828103825260298152602001806117c96029913960400191505060405180910390fd5b610702610d45565b600854610100900460ff1681565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156105795780601f1061054e57610100808354040283529160200191610579565b61099d610998610ca7565b610aa1565b6109d85760405162461bcd60e51b81526004018080602001828103825260308152602001806116a06030913960400191505060405180910390fd5b6107bc81610e29565b6107026109ec610ca7565b610e71565b60085460009060ff1615610a3f576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6105db8383610eb9565b60085460009060ff1615610a97576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6105db8383610f27565b60006107e260068363ffffffff610c4016565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6000610af3610aec610ca7565b8484610f3b565b50600192915050565b6000610b09848484611027565b610b7f84610b15610ca7565b610b7a856040518060600160405280602881526020016116f1602891396001600160a01b038a16600090815260046020526040812090610b53610ca7565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61118516565b610f3b565b5060019392505050565b6000610af3610b96610ca7565b84610b7a8560046000610ba7610ca7565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61121c16565b6000610bea610998610ca7565b610c255760405162461bcd60e51b81526004018080602001828103825260308152602001806116a06030913960400191505060405180910390fd5b610af38383611276565b6107bc610c3a610ca7565b82611368565b60006001600160a01b038216610c875760405162461bcd60e51b81526004018080602001828103825260228152602001806117196022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b3390565b610cbc60078263ffffffff61146416565b6040516001600160a01b038216907fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90600090a250565b61087682826114cb565b610d0e60078263ffffffff61151f16565b6040516001600160a01b038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b610d50610885610ca7565b610d8b5760405162461bcd60e51b81526004018080602001828103825260308152602001806116286030913960400191505060405180910390fd5b60085460ff1615610dd6576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6008805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e0c610ca7565b604080516001600160a01b039092168252519081900360200190a1565b610e3a60068263ffffffff61151f16565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610e8260068263ffffffff61146416565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000610af3610ec6610ca7565b84610b7a856040518060600160405280602581526020016117f26025913960046000610ef0610ca7565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61118516565b6000610af3610f34610ca7565b8484611027565b6001600160a01b038316610f805760405162461bcd60e51b81526004018080602001828103825260248152602001806117a56024913960400191505060405180910390fd5b6001600160a01b038216610fc55760405162461bcd60e51b81526004018080602001828103825260228152602001806116586022913960400191505060405180910390fd5b6001600160a01b03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661106c5760405162461bcd60e51b81526004018080602001828103825260258152602001806117806025913960400191505060405180910390fd5b6001600160a01b0382166110b15760405162461bcd60e51b81526004018080602001828103825260238152602001806115e36023913960400191505060405180910390fd5b6110f48160405180606001604052806026815260200161167a602691396001600160a01b038616600090815260036020526040902054919063ffffffff61118516565b6001600160a01b038085166000908152600360205260408082209390935590841681522054611129908263ffffffff61121c16565b6001600160a01b0380841660008181526003602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156112145760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156111d95781810151838201526020016111c1565b50505050905090810190601f1680156112065780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156105db576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b0382166112d1576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6005546112e4908263ffffffff61121c16565b6005556001600160a01b038216600090815260036020526040902054611310908263ffffffff61121c16565b6001600160a01b03831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b0382166113ad5760405162461bcd60e51b815260040180806020018281038252602181526020018061175f6021913960400191505060405180910390fd5b6113f081604051806060016040528060228152602001611606602291396001600160a01b038516600090815260036020526040902054919063ffffffff61118516565b6001600160a01b03831660009081526003602052604090205560055461141c908263ffffffff6115a016565b6005556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b61146e8282610c40565b6114a95760405162461bcd60e51b81526004018080602001828103825260218152602001806116d06021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6114d58282611368565b610876826114e1610ca7565b610b7a8460405180606001604052806024815260200161173b602491396001600160a01b038816600090815260046020526040812090610b53610ca7565b6115298282610c40565b1561157b576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006105db83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061118556fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e6365506175736572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652050617573657220726f6c6545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373746869732066756e6374696f6e2063616e206f6e6c792062652072756e206f6e206372656174696f6e45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820e46c0782ab6506d2cc7352aee60633187f310a2109f53421f961e81ddadbbf9c64736f6c63430005110032506175736572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652050617573657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373746869732066756e6374696f6e2063616e206f6e6c792062652072756e206f6e206372656174696f6e",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c80636ef8d66d116100de57806395d89b4111610097578063a457c2d711610071578063a457c2d714610441578063a9059cbb1461046d578063aa271e1a14610499578063dd62ed3e146104bf5761018e565b806395d89b411461040b578063983b2d561461041357806398650275146104395761018e565b80636ef8d66d1461037b57806370a082311461038357806379cc6790146103a957806382dc1ec4146103d55780638456cb59146103fb578063883356d9146104035761018e565b8063395093511161014b57806342966c681161012557806342966c681461032857806346b45af71461034557806346fbf68e1461034d5780635c975abb146103735761018e565b806339509351146102c65780633f4ba83a146102f257806340c10f19146102fc5761018e565b806306fdde0314610193578063095ea7b31461021057806318160ddd146102505780632121dc751461026a57806323b872dd14610272578063313ce567146102a8575b600080fd5b61019b6104ed565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101d55781810151838201526020016101bd565b50505050905090810190601f1680156102025780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61023c6004803603604081101561022657600080fd5b506001600160a01b038135169060200135610583565b604080519115158252519081900360200190f35b6102586105e2565b60408051918252519081900360200190f35b61023c6105e8565b61023c6004803603606081101561028857600080fd5b506001600160a01b038135811691602081013590911690604001356105f7565b6102b0610658565b6040805160ff9092168252519081900360200190f35b61023c600480360360408110156102dc57600080fd5b506001600160a01b038135169060200135610661565b6102fa6106b9565b005b61023c6004803603604081101561031257600080fd5b506001600160a01b038135169060200135610704565b6102fa6004803603602081101561033e57600080fd5b5035610763565b61023c6107bf565b61023c6004803603602081101561036357600080fd5b50356001600160a01b03166107cf565b61023c6107e8565b6102fa6107f1565b6102586004803603602081101561039957600080fd5b50356001600160a01b0316610801565b6102fa600480360360408110156103bf57600080fd5b506001600160a01b03813516906020013561081c565b6102fa600480360360208110156103eb57600080fd5b50356001600160a01b031661087a565b6102fa6108ce565b61023c61091f565b61019b61092d565b6102fa6004803603602081101561042957600080fd5b50356001600160a01b031661098d565b6102fa6109e1565b61023c6004803603604081101561045757600080fd5b506001600160a01b0381351690602001356109f1565b61023c6004803603604081101561048357600080fd5b506001600160a01b038135169060200135610a49565b61023c600480360360208110156104af57600080fd5b50356001600160a01b0316610aa1565b610258600480360360408110156104d557600080fd5b506001600160a01b0381358116916020013516610ab4565b60008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105795780601f1061054e57610100808354040283529160200191610579565b820191906000526020600020905b81548152906001019060200180831161055c57829003601f168201915b5050505050905090565b60085460009060ff16156105d1576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6105db8383610adf565b9392505050565b60055490565b60085462010000900460ff1681565b60085460009060ff1615610645576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b610650848484610afc565b949350505050565b60025460ff1690565b60085460009060ff16156106af576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6105db8383610b89565b600854640100000000900460ff166107025760405162461bcd60e51b81526004018080602001828103825260298152602001806117c96029913960400191505060405180910390fd5b565b6008546000906301000000900460ff16610759576040805162461bcd60e51b8152602060048201526011602482015270436f696e206e6f74206d696e7461626c6560781b604482015290519081900360640190fd5b6105db8383610bdd565b600854610100900460ff166107b3576040805162461bcd60e51b8152602060048201526011602482015270436f696e206e6f74206275726e61626c6560781b604482015290519081900360640190fd5b6107bc81610c2f565b50565b6008546301000000900460ff1681565b60006107e260078363ffffffff610c4016565b92915050565b60085460ff1690565b6107026107fc610ca7565b610cab565b6001600160a01b031660009081526003602052604090205490565b600854610100900460ff1661086c576040805162461bcd60e51b8152602060048201526011602482015270436f696e206e6f74206275726e61626c6560781b604482015290519081900360640190fd5b6108768282610cf3565b5050565b61088a610885610ca7565b6107cf565b6108c55760405162461bcd60e51b81526004018080602001828103825260308152602001806116286030913960400191505060405180910390fd5b6107bc81610cfd565b600854640100000000900460ff166109175760405162461bcd60e51b81526004018080602001828103825260298152602001806117c96029913960400191505060405180910390fd5b610702610d45565b600854610100900460ff1681565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156105795780601f1061054e57610100808354040283529160200191610579565b61099d610998610ca7565b610aa1565b6109d85760405162461bcd60e51b81526004018080602001828103825260308152602001806116a06030913960400191505060405180910390fd5b6107bc81610e29565b6107026109ec610ca7565b610e71565b60085460009060ff1615610a3f576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6105db8383610eb9565b60085460009060ff1615610a97576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6105db8383610f27565b60006107e260068363ffffffff610c4016565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6000610af3610aec610ca7565b8484610f3b565b50600192915050565b6000610b09848484611027565b610b7f84610b15610ca7565b610b7a856040518060600160405280602881526020016116f1602891396001600160a01b038a16600090815260046020526040812090610b53610ca7565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61118516565b610f3b565b5060019392505050565b6000610af3610b96610ca7565b84610b7a8560046000610ba7610ca7565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61121c16565b6000610bea610998610ca7565b610c255760405162461bcd60e51b81526004018080602001828103825260308152602001806116a06030913960400191505060405180910390fd5b610af38383611276565b6107bc610c3a610ca7565b82611368565b60006001600160a01b038216610c875760405162461bcd60e51b81526004018080602001828103825260228152602001806117196022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b3390565b610cbc60078263ffffffff61146416565b6040516001600160a01b038216907fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90600090a250565b61087682826114cb565b610d0e60078263ffffffff61151f16565b6040516001600160a01b038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b610d50610885610ca7565b610d8b5760405162461bcd60e51b81526004018080602001828103825260308152602001806116286030913960400191505060405180910390fd5b60085460ff1615610dd6576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6008805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e0c610ca7565b604080516001600160a01b039092168252519081900360200190a1565b610e3a60068263ffffffff61151f16565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610e8260068263ffffffff61146416565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000610af3610ec6610ca7565b84610b7a856040518060600160405280602581526020016117f26025913960046000610ef0610ca7565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61118516565b6000610af3610f34610ca7565b8484611027565b6001600160a01b038316610f805760405162461bcd60e51b81526004018080602001828103825260248152602001806117a56024913960400191505060405180910390fd5b6001600160a01b038216610fc55760405162461bcd60e51b81526004018080602001828103825260228152602001806116586022913960400191505060405180910390fd5b6001600160a01b03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661106c5760405162461bcd60e51b81526004018080602001828103825260258152602001806117806025913960400191505060405180910390fd5b6001600160a01b0382166110b15760405162461bcd60e51b81526004018080602001828103825260238152602001806115e36023913960400191505060405180910390fd5b6110f48160405180606001604052806026815260200161167a602691396001600160a01b038616600090815260036020526040902054919063ffffffff61118516565b6001600160a01b038085166000908152600360205260408082209390935590841681522054611129908263ffffffff61121c16565b6001600160a01b0380841660008181526003602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156112145760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156111d95781810151838201526020016111c1565b50505050905090810190601f1680156112065780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156105db576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b0382166112d1576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6005546112e4908263ffffffff61121c16565b6005556001600160a01b038216600090815260036020526040902054611310908263ffffffff61121c16565b6001600160a01b03831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b0382166113ad5760405162461bcd60e51b815260040180806020018281038252602181526020018061175f6021913960400191505060405180910390fd5b6113f081604051806060016040528060228152602001611606602291396001600160a01b038516600090815260036020526040902054919063ffffffff61118516565b6001600160a01b03831660009081526003602052604090205560055461141c908263ffffffff6115a016565b6005556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b61146e8282610c40565b6114a95760405162461bcd60e51b81526004018080602001828103825260218152602001806116d06021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6114d58282611368565b610876826114e1610ca7565b610b7a8460405180606001604052806024815260200161173b602491396001600160a01b038816600090815260046020526040812090610b53610ca7565b6115298282610c40565b1561157b576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006105db83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061118556fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e6365506175736572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652050617573657220726f6c6545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373746869732066756e6374696f6e2063616e206f6e6c792062652072756e206f6e206372656174696f6e45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820e46c0782ab6506d2cc7352aee60633187f310a2109f53421f961e81ddadbbf9c64736f6c63430005110032",
  "sourceMap": "687:3374:30:-;;;864:32;;;-1:-1:-1;;;;864:32:30;;;;;3029:1030;5:2:-1;;;;30:1;27;20:12;5:2;3029:1030:30;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3029:1030:30;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;3029:1030:30;;420:4:-1;411:14;;;;3029:1030:30;;;;;411:14:-1;3029:1030:30;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3029:1030:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;3029:1030:30;;420:4:-1;411:14;;;;3029:1030:30;;;;;411:14:-1;3029:1030:30;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3029:1030:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3029:1030:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;504:12:78;;3029:1030:30;;-1:-1:-1;3029:1030:30;;-1:-1:-1;3029:1030:30;;;;;;;;;3332:5;;3339:7;;3029:1030;;504:12:78;;:5;;:12;;;;:::i;:::-;-1:-1:-1;526:16:78;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;552:9:78;:20;;-1:-1:-1;;552:20:78;;;;;;;;;;;;-1:-1:-1;318:24:71;;-1:-1:-1;329:12:71;:10;:12::i;:::-;-1:-1:-1;;;;;318:10:71;:24;:::i;:::-;::72;329:12;-1:-1:-1;;;;;329:10:72;:12;:::i;:::-;-1:-1:-1;;;;;318:10:72;:24;:::i;:::-;1013:7:73;:15;;-1:-1:-1;;3496:24:30;1013:15:73;3496:24:30;;;;;-1:-1:-1;;3530:32:30;;;;;;;-1:-1:-1;;3572:24:30;;;;;;;;;3530:32;3606:52;;3640:7;-1:-1:-1;;;;;3640:5:30;:7;:::i;:::-;-1:-1:-1;;;;;3670:29:30;;;3667:77;;3715:18;3726:6;-1:-1:-1;;;;;3715:10:30;:18;:::i;:::-;-1:-1:-1;;;;;3757:32:30;;3753:166;;3805:32;3811:10;3823:13;-1:-1:-1;;;;;3805:5:30;:32;:::i;:::-;3753:166;;;3868:40;3874:18;3894:13;-1:-1:-1;;;;;3868:5:30;:40;:::i;:::-;-1:-1:-1;;4032:12:30;:20;;-1:-1:-1;;;;4032:20:30;;;-1:-1:-1;687:3374:30;;-1:-1:-1;;;;;;687:3374:30;788:96:69;867:10;788:96;;:::o;786:119:71:-;842:21;855:7;842:8;:12;;;;;;:21;;;;:::i;:::-;878:20;;-1:-1:-1;;;;;878:20:71;;;;;;;;786:119;:::o;::72:-;842:21;855:7;842:8;:12;;;;;;:21;;;;:::i;:::-;878:20;;-1:-1:-1;;;;;878:20:72;;;;;;;;786:119;:::o;2337:207:30:-;2456:12;;;;;;;2448:66;;;;-1:-1:-1;;;2448:66:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2524:13;:11;;;;;:13;;:::i;:::-;2337:207::o;5962:302:75:-;-1:-1:-1;;;;;6037:21:75;;6029:65;;;;;-1:-1:-1;;;6029:65:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;6120:24;6137:6;6120:12;;:16;;;;;;:24;;;;:::i;:::-;6105:12;:39;-1:-1:-1;;;;;6175:18:75;;;;;;:9;:18;;;;;;;;;:30;;6198:6;;6175:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;6154:18:75;;;;;;:9;:18;;;;;;;;:51;;;;6220:37;;;;;;;6154:18;;;;6220:37;;;;;;;;;;5962:302;;:::o;260:175:70:-;337:18;341:4;347:7;-1:-1:-1;;;;;337:3:70;:18;:::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:70;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:70;424:4;401:27;;;260:175::o;1687:115:73:-;395:22:72;404:12;-1:-1:-1;;;;;404:10:72;:12;:::i;:::-;-1:-1:-1;;;;;395:8:72;:22;:::i;:::-;387:83;;;;-1:-1:-1;;;387:83:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:7:73;;;;1358:8;1350:37;;;;;-1:-1:-1;;;1350:37:73;;;;;;;;;;;;-1:-1:-1;;;1350:37:73;;;;;;;;;;;;;;;1746:7;:14;;-1:-1:-1;;1746:14:73;1756:4;1746:14;;;1775:20;1782:12;-1:-1:-1;;;;;1782:10:73;:12;:::i;:::-;1775:20;;;-1:-1:-1;;;;;1775:20:73;;;;;;;;;;;;;;1687:115::o;834:176:74:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:74:o;779:200:70:-;851:4;-1:-1:-1;;;;;875:21:70;;867:68;;;;-1:-1:-1;;;867:68:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:70;:11;:20;;;;;;;;;;;;;;;779:200::o;494:107:72:-;550:4;573:21;586:7;573:8;:12;;;;;;:21;;;;:::i;:::-;566:28;494:107;-1:-1:-1;;494:107:72:o;687:3374:30:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;687:3374:30;;;-1:-1:-1;687:3374:30;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "687:3374:30:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;687:3374:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;644:81:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;688:138:80;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;688:138:80;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1559:89:75;;;:::i;:::-;;;;;;;;;;;;;;;;803:26:30;;;:::i;524:158:80:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;524:158:80;;;;;;;;;;;;;;;;;:::i;1472:81:78:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;832:168:80;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;832:168:80;;;;;;;;:::i;2837:186:30:-;;;:::i;:::-;;1905:217;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1905:217:30;;;;;;;;:::i;1020:179::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1020:179:30;;:::i;835:22::-;;;:::i;494:107:72:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;494:107:72;-1:-1:-1;;;;;494:107:72;;:::i;1130:76:73:-;;;:::i;703:77:72:-;;;:::i;1706:108:75:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1706:108:75;-1:-1:-1;;;;;1706:108:75;;:::i;1451:207:30:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1451:207:30;;;;;;;;:::i;607:90:72:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;607:90:72;-1:-1:-1;;;;;607:90:72;;:::i;2337:207:30:-;;;:::i;775:22::-;;;:::i;838:85:78:-;;;:::i;607:90:71:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;607:90:71;-1:-1:-1;;;;;607:90:71;;:::i;703:77::-;;;:::i;1006:178:80:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1006:178:80;;;;;;;;:::i;388:130::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;388:130:80;;;;;;;;:::i;494:107:71:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;494:107:71;-1:-1:-1;;;;;494:107:71;;:::i;2230:132:75:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2230:132:75;;;;;;;;;;:::i;644:81:78:-;713:5;706:12;;;;;;;;-1:-1:-1;;706:12:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:13;;706:12;;713:5;;706:12;;713:5;706:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81;:::o;688:138:80:-;1359:7:73;;767:4:80;;1359:7:73;;1358:8;1350:37;;;;;-1:-1:-1;;;1350:37:73;;;;;;;;;;;;-1:-1:-1;;;1350:37:73;;;;;;;;;;;;;;;790:29:80;804:7;813:5;790:13;:29::i;:::-;783:36;688:138;-1:-1:-1;;;688:138:80:o;1559:89:75:-;1629:12;;1559:89;:::o;803:26:30:-;;;;;;;;;:::o;524:158:80:-;1359:7:73;;617:4:80;;1359:7:73;;1358:8;1350:37;;;;;-1:-1:-1;;;1350:37:73;;;;;;;;;;;;-1:-1:-1;;;1350:37:73;;;;;;;;;;;;;;;640:35:80;659:4;665:2;669:5;640:18;:35::i;:::-;633:42;524:158;-1:-1:-1;;;;524:158:80:o;1472:81:78:-;1537:9;;;;1472:81;:::o;832:168:80:-;1359:7:73;;926:4:80;;1359:7:73;;1358:8;1350:37;;;;;-1:-1:-1;;;1350:37:73;;;;;;;;;;;;-1:-1:-1;;;1350:37:73;;;;;;;;;;;;;;;949:44:80;973:7;982:10;949:23;:44::i;2837:186:30:-;2958:12;;;;;;;2950:66;;;;-1:-1:-1;;;2950:66:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2837:186::o;1905:217::-;2045:10;;1962:4;;2045:10;;;;;2037:40;;;;;-1:-1:-1;;;2037:40:30;;;;;;;;;;;;-1:-1:-1;;;2037:40:30;;;;;;;;;;;;;;;2094:21;2105:2;2109:5;2094:10;:21::i;1020:179::-;1133:10;;;;;;;1125:40;;;;;-1:-1:-1;;;1125:40:30;;;;;;;;;;;;-1:-1:-1;;;1125:40:30;;;;;;;;;;;;;;;1175:17;1186:5;1175:10;:17::i;:::-;1020:179;:::o;835:22::-;;;;;;;;;:::o;494:107:72:-;550:4;573:21;:8;586:7;573:21;:12;:21;:::i;:::-;566:28;494:107;-1:-1:-1;;494:107:72:o;1130:76:73:-;1192:7;;;;1130:76;:::o;703:77:72:-;746:27;760:12;:10;:12::i;:::-;746:13;:27::i;1706:108:75:-;-1:-1:-1;;;;;1789:18:75;1763:7;1789:18;;;:9;:18;;;;;;;1706:108::o;1451:207:30:-;1582:10;;;;;;;1574:40;;;;;-1:-1:-1;;;1574:40:30;;;;;;;;;;;;-1:-1:-1;;;1574:40:30;;;;;;;;;;;;;;;1624:27;1639:4;1645:5;1624:14;:27::i;:::-;1451:207;;:::o;607:90:72:-;395:22;404:12;:10;:12::i;:::-;395:8;:22::i;:::-;387:83;;;;-1:-1:-1;;;387:83:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;671:19;682:7;671:10;:19::i;2337:207:30:-;2456:12;;;;;;;2448:66;;;;-1:-1:-1;;;2448:66:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2524:13;:11;:13::i;775:22::-;;;;;;;;;:::o;838:85:78:-;909:7;902:14;;;;;;;;-1:-1:-1;;902:14:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:13;;902:14;;909:7;;902:14;;909:7;902:14;;;;;;;;;;;;;;;;;;;;;;;;607:90:71;395:22;404:12;:10;:12::i;:::-;395:8;:22::i;:::-;387:83;;;;-1:-1:-1;;;387:83:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;671:19;682:7;671:10;:19::i;703:77::-;746:27;760:12;:10;:12::i;:::-;746:13;:27::i;1006:178:80:-;1359:7:73;;1105:4:80;;1359:7:73;;1358:8;1350:37;;;;;-1:-1:-1;;;1350:37:73;;;;;;;;;;;;-1:-1:-1;;;1350:37:73;;;;;;;;;;;;;;;1128:49:80;1152:7;1161:15;1128:23;:49::i;388:130::-;1359:7:73;;463:4:80;;1359:7:73;;1358:8;1350:37;;;;;-1:-1:-1;;;1350:37:73;;;;;;;;;;;;-1:-1:-1;;;1350:37:73;;;;;;;;;;;;;;;486:25:80;501:2;505:5;486:14;:25::i;494:107:71:-;550:4;573:21;:8;586:7;573:21;:12;:21;:::i;2230:132:75:-;-1:-1:-1;;;;;2328:18:75;;;2302:7;2328:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2230:132::o;2500:149::-;2566:4;2582:39;2591:12;:10;:12::i;:::-;2605:7;2614:6;2582:8;:39::i;:::-;-1:-1:-1;2638:4:75;2500:149;;;;:::o;3107:300::-;3196:4;3212:36;3222:6;3230:9;3241:6;3212:9;:36::i;:::-;3258:121;3267:6;3275:12;:10;:12::i;:::-;3289:89;3327:6;3289:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3289:19:75;;;;;;:11;:19;;;;;;3309:12;:10;:12::i;:::-;-1:-1:-1;;;;;3289:33:75;;;;;;;;;;;;-1:-1:-1;3289:33:75;;;:89;;:37;:89;:::i;:::-;3258:8;:121::i;:::-;-1:-1:-1;3396:4:75;3107:300;;;;;:::o;3802:207::-;3882:4;3898:83;3907:12;:10;:12::i;:::-;3921:7;3930:50;3969:10;3930:11;:25;3942:12;:10;:12::i;:::-;-1:-1:-1;;;;;3930:25:75;;;;;;;;;;;;;;;;;-1:-1:-1;3930:25:75;;;:34;;;;;;;;;;;:50;:38;:50;:::i;502:140:79:-;576:4;395:22:71;404:12;:10;:12::i;395:22::-;387:83;;;;-1:-1:-1;;;387:83:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;592:22:79;598:7;607:6;592:5;:22::i;439:81:76:-;486:27;492:12;:10;:12::i;:::-;506:6;486:5;:27::i;779:200:70:-;851:4;-1:-1:-1;;;;;875:21:70;;867:68;;;;-1:-1:-1;;;867:68:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:70;:11;:20;;;;;;;;;;;;;;;779:200::o;788:96:69:-;867:10;788:96;:::o;911:127:72:-;970:24;:8;986:7;970:24;:15;:24;:::i;:::-;1009:22;;-1:-1:-1;;;;;1009:22:72;;;;;;;;911:127;:::o;577:101:76:-;645:26;655:7;664:6;645:9;:26::i;786:119:72:-;842:21;:8;855:7;842:21;:12;:21;:::i;:::-;878:20;;-1:-1:-1;;;;;878:20:72;;;;;;;;786:119;:::o;1687:115:73:-;395:22:72;404:12;:10;:12::i;395:22::-;387:83;;;;-1:-1:-1;;;387:83:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:7:73;;;;1358:8;1350:37;;;;;-1:-1:-1;;;1350:37:73;;;;;;;;;;;;-1:-1:-1;;;1350:37:73;;;;;;;;;;;;;;;1746:7;:14;;-1:-1:-1;;1746:14:73;1756:4;1746:14;;;1775:20;1782:12;:10;:12::i;:::-;1775:20;;;-1:-1:-1;;;;;1775:20:73;;;;;;;;;;;;;;1687:115::o;786:119:71:-;842:21;:8;855:7;842:21;:12;:21;:::i;:::-;878:20;;-1:-1:-1;;;;;878:20:71;;;;;;;;786:119;:::o;911:127::-;970:24;:8;986:7;970:24;:15;:24;:::i;:::-;1009:22;;-1:-1:-1;;;;;1009:22:71;;;;;;;;911:127;:::o;4496:258:75:-;4581:4;4597:129;4606:12;:10;:12::i;:::-;4620:7;4629:96;4668:15;4629:96;;;;;;;;;;;;;;;;;:11;:25;4641:12;:10;:12::i;:::-;-1:-1:-1;;;;;4629:25:75;;;;;;;;;;;;;;;;;-1:-1:-1;4629:25:75;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;2017:155::-;2086:4;2102:42;2112:12;:10;:12::i;:::-;2126:9;2137:6;2102:9;:42::i;7350:332::-;-1:-1:-1;;;;;7443:19:75;;7435:68;;;;-1:-1:-1;;;7435:68:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7521:21:75;;7513:68;;;;-1:-1:-1;;;7513:68:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7592:18:75;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7643:32;;;;;;;;;;;;;;;;;7350:332;;;:::o;5228:464::-;-1:-1:-1;;;;;5325:20:75;;5317:70;;;;-1:-1:-1;;;5317:70:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5405:23:75;;5397:71;;;;-1:-1:-1;;;5397:71:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5499;5521:6;5499:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5499:17:75;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;5479:17:75;;;;;;;:9;:17;;;;;;:91;;;;5603:20;;;;;;;:32;;5628:6;5603:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5580:20:75;;;;;;;:9;:20;;;;;;;;;:55;;;;5650:35;;;;;;;5580:20;;5650:35;;;;;;;;;;;;;5228:464;;;:::o;1732:187:74:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:74;;;1732:187::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:74;;;;;;;;;;;;;;;;;;;;;;;;;;;5962:302:75;-1:-1:-1;;;;;6037:21:75;;6029:65;;;;;-1:-1:-1;;;6029:65:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;6120:12;;:24;;6137:6;6120:24;:16;:24;:::i;:::-;6105:12;:39;-1:-1:-1;;;;;6175:18:75;;;;;;:9;:18;;;;;;:30;;6198:6;6175:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;6154:18:75;;;;;;:9;:18;;;;;;;;:51;;;;6220:37;;;;;;;6154:18;;;;6220:37;;;;;;;;;;5962:302;;:::o;6583:342::-;-1:-1:-1;;;;;6658:21:75;;6650:67;;;;-1:-1:-1;;;6650:67:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6749:68;6772:6;6749:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6749:18:75;;;;;;:9;:18;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;6728:18:75;;;;;;:9;:18;;;;;:89;6842:12;;:24;;6859:6;6842:24;:16;:24;:::i;:::-;6827:12;:39;6881:37;;;;;;;;6907:1;;-1:-1:-1;;;;;6881:37:75;;;;;;;;;;;;6583:342;;:::o;510:180:70:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:70;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:70;;;510:180::o;7860:229:75:-;7931:22;7937:7;7946:6;7931:5;:22::i;:::-;7963:119;7972:7;7981:12;:10;:12::i;:::-;7995:86;8034:6;7995:86;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7995:20:75;;;;;;:11;:20;;;;;;8016:12;:10;:12::i;260:175:70:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:70;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:70;424:4;401:27;;;260:175::o;1274:134:74:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i",
  "source": "pragma solidity ^0.5.17;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20Mintable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\";\n\n/**\n * @title ERC20Plus\n * @dev ERC20 Token, where all tokens (INITIAL_SUPPLY) are pre-assigned to the creator.\n * Note they can later distribute these tokens as they wish using `transfer` and other\n * `ERC20` functions.\n * Depending on the parameters provided, this token can be mintable, burnable and/or\n * pausable (non-transferable).\n */\ncontract ERC20Plus is ERC20Detailed, ERC20Mintable, ERC20Burnable, ERC20Pausable {\n\n    bool public isBurnable;\n    bool public isTransferable;\n    bool public isMintable;\n\n    bool private constructing = true;\n\n    /**\n     * @dev Burns a specific amount of tokens.\n     * @param value The amount of token to be burned.\n     */\n    function burn(uint256 value) public {\n        // Checks whether token is burnable before minting\n        require(isBurnable, \"Coin not burnable\");\n        super.burn(value);\n    }\n\n    /**\n     * @dev Burns a specific amount of tokens from the target address and decrements allowance\n     * @param from address The address which you want to send tokens from\n     * @param value uint256 The amount of token to be burned\n     */\n    function burnFrom(address from, uint256 value) public {\n        // Checks whether token is burnable before minting\n        require(isBurnable, \"Coin not burnable\");\n        super.burnFrom(from, value);\n    }\n\n    /**\n     * @dev Function to mint tokens\n     * @param to The address that will receive the minted tokens.\n     * @param value The amount of tokens to mint.\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function mint(address to, uint256 value) public returns (bool) {\n        // Checks whether token is mintable before minting\n        require(isMintable, \"Coin not mintable\");\n        return super.mint(to, value);\n    }\n\n    /**\n     * @dev called by the owner to pause, triggers stopped state.\n     * This means functions transfer, transferFrom, approve, increaseAllowance,\n     * and decreasAllowance, will not execute.\n     */\n    function pause() public{\n        // Checks whether token is being constructed, throws exception if not\n        require(constructing, \"this function can only be run on creation\");\n        super.pause();\n    }\n\n     /**\n     * @dev This will undo pause(). The purpose of this declaration is to\n     * disable this function, as this function must not be called (unless\n     * making an untransferable token transferable again is wanted, but\n     * this is currently not an offered feature).\n     */\n    function unpause() public{\n        // Checks whether token is being constructed, throws exception if not\n        require(constructing, \"this function can only be run on creation\");\n    }\n\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        uint8 decimals_,\n        address minter,\n        bool isBurnable_,\n        bool isTransferable_,\n        bool isMintable_,\n        uint initialSupply,\n        address initialSupplyOwner\n        )\n            ERC20Detailed(name_, symbol_, decimals_)\n            ERC20Mintable()\n            ERC20Burnable()\n            ERC20Pausable()\n            ERC20()\n            public\n    {\n        isBurnable = isBurnable_;\n        isTransferable = isTransferable_;\n        isMintable = isMintable_;\n        if(!isTransferable_){\n            pause();\n        }\n        if(address(minter) != address(0)) {\n            _addMinter(minter);\n        }\n        if (initialSupplyOwner == address(0)) {\n            _mint(msg.sender, initialSupply);\n        } else {\n            _mint(initialSupplyOwner, initialSupply);\n        }\n        // To indicate construction is over, and block pause() and unpause()\n        // from being used\n        constructing = false;\n    }\n}\n\n/**\n * @title ERC20PlusCapped\n * @dev ERC20 Token, which acts very similarly to ERC20Plus, but with the\n * exception that it has a cap.\n */\ncontract ERC20PlusCapped is ERC20Capped, ERC20Plus {\n\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        uint8 decimals_,\n        address minter,\n        bool isBurnable_,\n        uint cap_,\n        bool isTransferable_,\n        bool isMintable_,\n        uint initialSupply,\n        address initialSupplyOwner\n        )\n            public\n            // ERC20Capped constructor\n            ERC20Capped(cap_)\n            // ERC20Plus constructor\n            ERC20Plus(\n                name_,\n                symbol_,\n                decimals_,\n                minter,\n                isBurnable_,\n                isTransferable_,\n                isMintable_,\n                initialSupply,\n                initialSupplyOwner)\n    {\n    }\n}",
  "sourcePath": "/home/cantonioupao/susDAO-saveMe/FIN4Contracts/contracts/tokens/ERC20Plus.sol",
  "ast": {
    "absolutePath": "/home/cantonioupao/susDAO-saveMe/FIN4Contracts/contracts/tokens/ERC20Plus.sol",
    "exportedSymbols": {
      "ERC20Plus": [
        11952
      ],
      "ERC20PlusCapped": [
        11995
      ]
    },
    "id": 11996,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11758,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:30"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 11759,
        "nodeType": "ImportDirective",
        "scope": 11996,
        "sourceUnit": 21503,
        "src": "26:63:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 11760,
        "nodeType": "ImportDirective",
        "scope": 11996,
        "sourceUnit": 21531,
        "src": "90:63:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
        "id": 11761,
        "nodeType": "ImportDirective",
        "scope": 11996,
        "sourceUnit": 21386,
        "src": "154:63:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol",
        "id": 11762,
        "nodeType": "ImportDirective",
        "scope": 11996,
        "sourceUnit": 21445,
        "src": "218:61:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol",
        "id": 11763,
        "nodeType": "ImportDirective",
        "scope": 11996,
        "sourceUnit": 21633,
        "src": "280:63:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11764,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21502,
              "src": "709:13:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$21502",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 11765,
            "nodeType": "InheritanceSpecifier",
            "src": "709:13:30"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11766,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21530,
              "src": "724:13:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$21530",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 11767,
            "nodeType": "InheritanceSpecifier",
            "src": "724:13:30"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11768,
              "name": "ERC20Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21385,
              "src": "739:13:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Burnable_$21385",
                "typeString": "contract ERC20Burnable"
              }
            },
            "id": 11769,
            "nodeType": "InheritanceSpecifier",
            "src": "739:13:30"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11770,
              "name": "ERC20Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21632,
              "src": "754:13:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Pausable_$21632",
                "typeString": "contract ERC20Pausable"
              }
            },
            "id": 11771,
            "nodeType": "InheritanceSpecifier",
            "src": "754:13:30"
          }
        ],
        "contractDependencies": [
          20376,
          20564,
          20671,
          20759,
          21351,
          21385,
          21502,
          21530,
          21632,
          21701
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Plus\n@dev ERC20 Token, where all tokens (INITIAL_SUPPLY) are pre-assigned to the creator.\nNote they can later distribute these tokens as they wish using `transfer` and other\n`ERC20` functions.\nDepending on the parameters provided, this token can be mintable, burnable and/or\npausable (non-transferable).",
        "fullyImplemented": true,
        "id": 11952,
        "linearizedBaseContracts": [
          11952,
          21632,
          20759,
          20671,
          21385,
          21530,
          20564,
          21351,
          21502,
          21701,
          20376
        ],
        "name": "ERC20Plus",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 11773,
            "name": "isBurnable",
            "nodeType": "VariableDeclaration",
            "scope": 11952,
            "src": "775:22:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 11772,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "775:4:30",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11775,
            "name": "isTransferable",
            "nodeType": "VariableDeclaration",
            "scope": 11952,
            "src": "803:26:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 11774,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "803:4:30",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11777,
            "name": "isMintable",
            "nodeType": "VariableDeclaration",
            "scope": 11952,
            "src": "835:22:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 11776,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "835:4:30",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11780,
            "name": "constructing",
            "nodeType": "VariableDeclaration",
            "scope": 11952,
            "src": "864:32:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 11778,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "864:4:30",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "74727565",
              "id": 11779,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "892:4:30",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 11796,
              "nodeType": "Block",
              "src": "1056:143:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11786,
                        "name": "isBurnable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11773,
                        "src": "1133:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f696e206e6f74206275726e61626c65",
                        "id": 11787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1145:19:30",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2531d6976c37a970711737014a9a4dfc20f207639645a349ade5c8893e2b4f1",
                          "typeString": "literal_string \"Coin not burnable\""
                        },
                        "value": "Coin not burnable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e2531d6976c37a970711737014a9a4dfc20f207639645a349ade5c8893e2b4f1",
                          "typeString": "literal_string \"Coin not burnable\""
                        }
                      ],
                      "id": 11785,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        31499,
                        31500
                      ],
                      "referencedDeclaration": 31500,
                      "src": "1125:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1125:40:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11789,
                  "nodeType": "ExpressionStatement",
                  "src": "1125:40:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11793,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11782,
                        "src": "1186:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11790,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31603,
                        "src": "1175:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Plus_$11952",
                          "typeString": "contract super ERC20Plus"
                        }
                      },
                      "id": 11792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21371,
                      "src": "1175:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 11794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1175:17:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11795,
                  "nodeType": "ExpressionStatement",
                  "src": "1175:17:30"
                }
              ]
            },
            "documentation": "@dev Burns a specific amount of tokens.\n@param value The amount of token to be burned.",
            "id": 11797,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11782,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 11797,
                  "src": "1034:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11781,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1034:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1033:15:30"
            },
            "returnParameters": {
              "id": 11784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1056:0:30"
            },
            "scope": 11952,
            "src": "1020:179:30",
            "stateMutability": "nonpayable",
            "superFunction": 21371,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11816,
              "nodeType": "Block",
              "src": "1505:153:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11805,
                        "name": "isBurnable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11773,
                        "src": "1582:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f696e206e6f74206275726e61626c65",
                        "id": 11806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1594:19:30",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2531d6976c37a970711737014a9a4dfc20f207639645a349ade5c8893e2b4f1",
                          "typeString": "literal_string \"Coin not burnable\""
                        },
                        "value": "Coin not burnable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e2531d6976c37a970711737014a9a4dfc20f207639645a349ade5c8893e2b4f1",
                          "typeString": "literal_string \"Coin not burnable\""
                        }
                      ],
                      "id": 11804,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        31499,
                        31500
                      ],
                      "referencedDeclaration": 31500,
                      "src": "1574:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1574:40:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11808,
                  "nodeType": "ExpressionStatement",
                  "src": "1574:40:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11812,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11799,
                        "src": "1639:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11813,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11801,
                        "src": "1645:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11809,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31603,
                        "src": "1624:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Plus_$11952",
                          "typeString": "contract super ERC20Plus"
                        }
                      },
                      "id": 11811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21384,
                      "src": "1624:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1624:27:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11815,
                  "nodeType": "ExpressionStatement",
                  "src": "1624:27:30"
                }
              ]
            },
            "documentation": "@dev Burns a specific amount of tokens from the target address and decrements allowance\n@param from address The address which you want to send tokens from\n@param value uint256 The amount of token to be burned",
            "id": 11817,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11799,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 11817,
                  "src": "1469:12:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11798,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1469:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11801,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 11817,
                  "src": "1483:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11800,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1483:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1468:29:30"
            },
            "returnParameters": {
              "id": 11803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1505:0:30"
            },
            "scope": 11952,
            "src": "1451:207:30",
            "stateMutability": "nonpayable",
            "superFunction": 21384,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11837,
              "nodeType": "Block",
              "src": "1968:154:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11827,
                        "name": "isMintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11777,
                        "src": "2045:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f696e206e6f74206d696e7461626c65",
                        "id": 11828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2057:19:30",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_370a2ae712710fa7dd456ad47506a66c523ccaf97e6b4687d3a6ee5aaa77560f",
                          "typeString": "literal_string \"Coin not mintable\""
                        },
                        "value": "Coin not mintable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_370a2ae712710fa7dd456ad47506a66c523ccaf97e6b4687d3a6ee5aaa77560f",
                          "typeString": "literal_string \"Coin not mintable\""
                        }
                      ],
                      "id": 11826,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        31499,
                        31500
                      ],
                      "referencedDeclaration": 31500,
                      "src": "2037:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2037:40:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11830,
                  "nodeType": "ExpressionStatement",
                  "src": "2037:40:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11833,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11819,
                        "src": "2105:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11834,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11821,
                        "src": "2109:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11831,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31603,
                        "src": "2094:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Plus_$11952",
                          "typeString": "contract super ERC20Plus"
                        }
                      },
                      "id": 11832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21529,
                      "src": "2094:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 11835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2094:21:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 11825,
                  "id": 11836,
                  "nodeType": "Return",
                  "src": "2087:28:30"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 11838,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11819,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 11838,
                  "src": "1919:10:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11818,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1919:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11821,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 11838,
                  "src": "1931:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11820,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1931:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1918:27:30"
            },
            "returnParameters": {
              "id": 11825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11824,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11838,
                  "src": "1962:4:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11823,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1962:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1961:6:30"
            },
            "scope": 11952,
            "src": "1905:217:30",
            "stateMutability": "nonpayable",
            "superFunction": 21529,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11851,
              "nodeType": "Block",
              "src": "2360:184:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11842,
                        "name": "constructing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11780,
                        "src": "2456:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "746869732066756e6374696f6e2063616e206f6e6c792062652072756e206f6e206372656174696f6e",
                        "id": 11843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2470:43:30",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da2954975739b84494c9442eabda54d34a88c079b31b358bc516f3cbd8ff66b3",
                          "typeString": "literal_string \"this function can only be run on creation\""
                        },
                        "value": "this function can only be run on creation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da2954975739b84494c9442eabda54d34a88c079b31b358bc516f3cbd8ff66b3",
                          "typeString": "literal_string \"this function can only be run on creation\""
                        }
                      ],
                      "id": 11841,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        31499,
                        31500
                      ],
                      "referencedDeclaration": 31500,
                      "src": "2448:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2448:66:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11845,
                  "nodeType": "ExpressionStatement",
                  "src": "2448:66:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11846,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31603,
                        "src": "2524:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Plus_$11952",
                          "typeString": "contract super ERC20Plus"
                        }
                      },
                      "id": 11848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20741,
                      "src": "2524:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 11849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2524:13:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11850,
                  "nodeType": "ExpressionStatement",
                  "src": "2524:13:30"
                }
              ]
            },
            "documentation": "@dev called by the owner to pause, triggers stopped state.\nThis means functions transfer, transferFrom, approve, increaseAllowance,\nand decreasAllowance, will not execute.",
            "id": 11852,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2351:2:30"
            },
            "returnParameters": {
              "id": 11840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2360:0:30"
            },
            "scope": 11952,
            "src": "2337:207:30",
            "stateMutability": "nonpayable",
            "superFunction": 20741,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11860,
              "nodeType": "Block",
              "src": "2862:161:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11856,
                        "name": "constructing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11780,
                        "src": "2958:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "746869732066756e6374696f6e2063616e206f6e6c792062652072756e206f6e206372656174696f6e",
                        "id": 11857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2972:43:30",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da2954975739b84494c9442eabda54d34a88c079b31b358bc516f3cbd8ff66b3",
                          "typeString": "literal_string \"this function can only be run on creation\""
                        },
                        "value": "this function can only be run on creation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da2954975739b84494c9442eabda54d34a88c079b31b358bc516f3cbd8ff66b3",
                          "typeString": "literal_string \"this function can only be run on creation\""
                        }
                      ],
                      "id": 11855,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        31499,
                        31500
                      ],
                      "referencedDeclaration": 31500,
                      "src": "2950:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2950:66:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11859,
                  "nodeType": "ExpressionStatement",
                  "src": "2950:66:30"
                }
              ]
            },
            "documentation": "@dev This will undo pause(). The purpose of this declaration is to\ndisable this function, as this function must not be called (unless\nmaking an untransferable token transferable again is wanted, but\nthis is currently not an offered feature).",
            "id": 11861,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2853:2:30"
            },
            "returnParameters": {
              "id": 11854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2862:0:30"
            },
            "scope": 11952,
            "src": "2837:186:30",
            "stateMutability": "nonpayable",
            "superFunction": 20758,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11950,
              "nodeType": "Block",
              "src": "3486:573:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11895,
                      "name": "isBurnable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11773,
                      "src": "3496:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11896,
                      "name": "isBurnable_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11871,
                      "src": "3509:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3496:24:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11898,
                  "nodeType": "ExpressionStatement",
                  "src": "3496:24:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11899,
                      "name": "isTransferable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11775,
                      "src": "3530:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11900,
                      "name": "isTransferable_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11873,
                      "src": "3547:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3530:32:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11902,
                  "nodeType": "ExpressionStatement",
                  "src": "3530:32:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11903,
                      "name": "isMintable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11777,
                      "src": "3572:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11904,
                      "name": "isMintable_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11875,
                      "src": "3585:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3572:24:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11906,
                  "nodeType": "ExpressionStatement",
                  "src": "3572:24:30"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 11908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3609:16:30",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 11907,
                      "name": "isTransferable_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11873,
                      "src": "3610:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 11913,
                  "nodeType": "IfStatement",
                  "src": "3606:52:30",
                  "trueBody": {
                    "id": 11912,
                    "nodeType": "Block",
                    "src": "3626:32:30",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 11909,
                            "name": "pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              11852
                            ],
                            "referencedDeclaration": 11852,
                            "src": "3640:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 11910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3640:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11911,
                        "nodeType": "ExpressionStatement",
                        "src": "3640:7:30"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 11920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 11915,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11869,
                          "src": "3678:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 11914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3670:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 11916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3670:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 11918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3697:1:30",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 11917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3689:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 11919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3689:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3670:29:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 11926,
                  "nodeType": "IfStatement",
                  "src": "3667:77:30",
                  "trueBody": {
                    "id": 11925,
                    "nodeType": "Block",
                    "src": "3701:43:30",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 11922,
                              "name": "minter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11869,
                              "src": "3726:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 11921,
                            "name": "_addMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20547,
                            "src": "3715:10:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 11923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3715:18:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11924,
                        "nodeType": "ExpressionStatement",
                        "src": "3715:18:30"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 11931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 11927,
                      "name": "initialSupplyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11879,
                      "src": "3757:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 11929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3787:1:30",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 11928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3779:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 11930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3779:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3757:32:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 11944,
                    "nodeType": "Block",
                    "src": "3854:65:30",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 11940,
                              "name": "initialSupplyOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11879,
                              "src": "3874:18:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 11941,
                              "name": "initialSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11877,
                              "src": "3894:13:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 11939,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21235,
                            "src": "3868:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 11942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3868:40:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11943,
                        "nodeType": "ExpressionStatement",
                        "src": "3868:40:30"
                      }
                    ]
                  },
                  "id": 11945,
                  "nodeType": "IfStatement",
                  "src": "3753:166:30",
                  "trueBody": {
                    "id": 11938,
                    "nodeType": "Block",
                    "src": "3791:57:30",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 11933,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31496,
                                "src": "3811:3:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 11934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3811:10:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 11935,
                              "name": "initialSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11877,
                              "src": "3823:13:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 11932,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21235,
                            "src": "3805:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 11936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3805:32:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11937,
                        "nodeType": "ExpressionStatement",
                        "src": "3805:32:30"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11946,
                      "name": "constructing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11780,
                      "src": "4032:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 11947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4047:5:30",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4032:20:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11949,
                  "nodeType": "ExpressionStatement",
                  "src": "4032:20:30"
                }
              ]
            },
            "documentation": null,
            "id": 11951,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 11882,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11863,
                    "src": "3332:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11883,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11865,
                    "src": "3339:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11884,
                    "name": "decimals_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11867,
                    "src": "3348:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 11885,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11881,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 21502,
                  "src": "3318:13:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$21502_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3318:40:30"
              },
              {
                "arguments": [],
                "id": 11887,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11886,
                  "name": "ERC20Mintable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 21530,
                  "src": "3371:13:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$21530_$",
                    "typeString": "type(contract ERC20Mintable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3371:15:30"
              },
              {
                "arguments": [],
                "id": 11889,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11888,
                  "name": "ERC20Burnable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 21385,
                  "src": "3399:13:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Burnable_$21385_$",
                    "typeString": "type(contract ERC20Burnable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3399:15:30"
              },
              {
                "arguments": [],
                "id": 11891,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11890,
                  "name": "ERC20Pausable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 21632,
                  "src": "3427:13:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Pausable_$21632_$",
                    "typeString": "type(contract ERC20Pausable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3427:15:30"
              },
              {
                "arguments": [],
                "id": 11893,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11892,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 21351,
                  "src": "3455:5:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$21351_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3455:7:30"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11863,
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11951,
                  "src": "3050:19:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11862,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3050:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11865,
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11951,
                  "src": "3079:21:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11864,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3079:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11867,
                  "name": "decimals_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11951,
                  "src": "3110:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 11866,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3110:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11869,
                  "name": "minter",
                  "nodeType": "VariableDeclaration",
                  "scope": 11951,
                  "src": "3135:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11868,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3135:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11871,
                  "name": "isBurnable_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11951,
                  "src": "3159:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11870,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3159:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11873,
                  "name": "isTransferable_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11951,
                  "src": "3185:20:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11872,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3185:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11875,
                  "name": "isMintable_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11951,
                  "src": "3215:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11874,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3215:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11877,
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 11951,
                  "src": "3241:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11876,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3241:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11879,
                  "name": "initialSupplyOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 11951,
                  "src": "3269:26:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3269:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3040:265:30"
            },
            "returnParameters": {
              "id": 11894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3486:0:30"
            },
            "scope": 11952,
            "src": "3029:1030:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 11996,
        "src": "687:3374:30"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11953,
              "name": "ERC20Capped",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21444,
              "src": "4231:11:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Capped_$21444",
                "typeString": "contract ERC20Capped"
              }
            },
            "id": 11954,
            "nodeType": "InheritanceSpecifier",
            "src": "4231:11:30"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11955,
              "name": "ERC20Plus",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11952,
              "src": "4244:9:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Plus_$11952",
                "typeString": "contract ERC20Plus"
              }
            },
            "id": 11956,
            "nodeType": "InheritanceSpecifier",
            "src": "4244:9:30"
          }
        ],
        "contractDependencies": [
          11952,
          20376,
          20564,
          20671,
          20759,
          21351,
          21385,
          21444,
          21502,
          21530,
          21632,
          21701
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20PlusCapped\n@dev ERC20 Token, which acts very similarly to ERC20Plus, but with the\nexception that it has a cap.",
        "fullyImplemented": true,
        "id": 11995,
        "linearizedBaseContracts": [
          11995,
          11952,
          21632,
          20759,
          20671,
          21385,
          21444,
          21530,
          20564,
          21351,
          21502,
          21701,
          20376
        ],
        "name": "ERC20PlusCapped",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 11993,
              "nodeType": "Block",
              "src": "4966:7:30",
              "statements": []
            },
            "documentation": null,
            "id": 11994,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 11979,
                    "name": "cap_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11968,
                    "src": "4639:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 11980,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11978,
                  "name": "ERC20Capped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 21444,
                  "src": "4627:11:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Capped_$21444_$",
                    "typeString": "type(contract ERC20Capped)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4627:17:30"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 11982,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11958,
                    "src": "4721:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11983,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11960,
                    "src": "4744:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11984,
                    "name": "decimals_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11962,
                    "src": "4769:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11985,
                    "name": "minter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11964,
                    "src": "4796:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11986,
                    "name": "isBurnable_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11966,
                    "src": "4820:11:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11987,
                    "name": "isTransferable_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11970,
                    "src": "4849:15:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11988,
                    "name": "isMintable_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11972,
                    "src": "4882:11:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11989,
                    "name": "initialSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11974,
                    "src": "4911:13:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11990,
                    "name": "initialSupplyOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11976,
                    "src": "4942:18:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 11991,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11981,
                  "name": "ERC20Plus",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11952,
                  "src": "4694:9:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Plus_$11952_$",
                    "typeString": "type(contract ERC20Plus)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4694:267:30"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11958,
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11994,
                  "src": "4282:19:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11957,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4282:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11960,
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11994,
                  "src": "4311:21:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11959,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4311:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11962,
                  "name": "decimals_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11994,
                  "src": "4342:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 11961,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4342:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11964,
                  "name": "minter",
                  "nodeType": "VariableDeclaration",
                  "scope": 11994,
                  "src": "4367:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4367:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11966,
                  "name": "isBurnable_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11994,
                  "src": "4391:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11965,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4391:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11968,
                  "name": "cap_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11994,
                  "src": "4417:9:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11967,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4417:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11970,
                  "name": "isTransferable_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11994,
                  "src": "4436:20:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11969,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4436:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11972,
                  "name": "isMintable_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11994,
                  "src": "4466:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11971,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4466:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11974,
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 11994,
                  "src": "4492:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11973,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4492:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11976,
                  "name": "initialSupplyOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 11994,
                  "src": "4520:26:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4520:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4272:284:30"
            },
            "returnParameters": {
              "id": 11992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4966:0:30"
            },
            "scope": 11995,
            "src": "4261:712:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 11996,
        "src": "4203:772:30"
      }
    ],
    "src": "0:4975:30"
  },
  "legacyAST": {
    "absolutePath": "/home/cantonioupao/susDAO-saveMe/FIN4Contracts/contracts/tokens/ERC20Plus.sol",
    "exportedSymbols": {
      "ERC20Plus": [
        11952
      ],
      "ERC20PlusCapped": [
        11995
      ]
    },
    "id": 11996,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11758,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:30"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 11759,
        "nodeType": "ImportDirective",
        "scope": 11996,
        "sourceUnit": 21503,
        "src": "26:63:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 11760,
        "nodeType": "ImportDirective",
        "scope": 11996,
        "sourceUnit": 21531,
        "src": "90:63:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
        "id": 11761,
        "nodeType": "ImportDirective",
        "scope": 11996,
        "sourceUnit": 21386,
        "src": "154:63:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol",
        "id": 11762,
        "nodeType": "ImportDirective",
        "scope": 11996,
        "sourceUnit": 21445,
        "src": "218:61:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol",
        "id": 11763,
        "nodeType": "ImportDirective",
        "scope": 11996,
        "sourceUnit": 21633,
        "src": "280:63:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11764,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21502,
              "src": "709:13:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$21502",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 11765,
            "nodeType": "InheritanceSpecifier",
            "src": "709:13:30"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11766,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21530,
              "src": "724:13:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$21530",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 11767,
            "nodeType": "InheritanceSpecifier",
            "src": "724:13:30"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11768,
              "name": "ERC20Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21385,
              "src": "739:13:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Burnable_$21385",
                "typeString": "contract ERC20Burnable"
              }
            },
            "id": 11769,
            "nodeType": "InheritanceSpecifier",
            "src": "739:13:30"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11770,
              "name": "ERC20Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21632,
              "src": "754:13:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Pausable_$21632",
                "typeString": "contract ERC20Pausable"
              }
            },
            "id": 11771,
            "nodeType": "InheritanceSpecifier",
            "src": "754:13:30"
          }
        ],
        "contractDependencies": [
          20376,
          20564,
          20671,
          20759,
          21351,
          21385,
          21502,
          21530,
          21632,
          21701
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Plus\n@dev ERC20 Token, where all tokens (INITIAL_SUPPLY) are pre-assigned to the creator.\nNote they can later distribute these tokens as they wish using `transfer` and other\n`ERC20` functions.\nDepending on the parameters provided, this token can be mintable, burnable and/or\npausable (non-transferable).",
        "fullyImplemented": true,
        "id": 11952,
        "linearizedBaseContracts": [
          11952,
          21632,
          20759,
          20671,
          21385,
          21530,
          20564,
          21351,
          21502,
          21701,
          20376
        ],
        "name": "ERC20Plus",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 11773,
            "name": "isBurnable",
            "nodeType": "VariableDeclaration",
            "scope": 11952,
            "src": "775:22:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 11772,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "775:4:30",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11775,
            "name": "isTransferable",
            "nodeType": "VariableDeclaration",
            "scope": 11952,
            "src": "803:26:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 11774,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "803:4:30",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11777,
            "name": "isMintable",
            "nodeType": "VariableDeclaration",
            "scope": 11952,
            "src": "835:22:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 11776,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "835:4:30",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11780,
            "name": "constructing",
            "nodeType": "VariableDeclaration",
            "scope": 11952,
            "src": "864:32:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 11778,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "864:4:30",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "74727565",
              "id": 11779,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "892:4:30",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 11796,
              "nodeType": "Block",
              "src": "1056:143:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11786,
                        "name": "isBurnable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11773,
                        "src": "1133:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f696e206e6f74206275726e61626c65",
                        "id": 11787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1145:19:30",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2531d6976c37a970711737014a9a4dfc20f207639645a349ade5c8893e2b4f1",
                          "typeString": "literal_string \"Coin not burnable\""
                        },
                        "value": "Coin not burnable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e2531d6976c37a970711737014a9a4dfc20f207639645a349ade5c8893e2b4f1",
                          "typeString": "literal_string \"Coin not burnable\""
                        }
                      ],
                      "id": 11785,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        31499,
                        31500
                      ],
                      "referencedDeclaration": 31500,
                      "src": "1125:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1125:40:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11789,
                  "nodeType": "ExpressionStatement",
                  "src": "1125:40:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11793,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11782,
                        "src": "1186:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11790,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31603,
                        "src": "1175:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Plus_$11952",
                          "typeString": "contract super ERC20Plus"
                        }
                      },
                      "id": 11792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21371,
                      "src": "1175:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 11794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1175:17:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11795,
                  "nodeType": "ExpressionStatement",
                  "src": "1175:17:30"
                }
              ]
            },
            "documentation": "@dev Burns a specific amount of tokens.\n@param value The amount of token to be burned.",
            "id": 11797,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11782,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 11797,
                  "src": "1034:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11781,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1034:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1033:15:30"
            },
            "returnParameters": {
              "id": 11784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1056:0:30"
            },
            "scope": 11952,
            "src": "1020:179:30",
            "stateMutability": "nonpayable",
            "superFunction": 21371,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11816,
              "nodeType": "Block",
              "src": "1505:153:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11805,
                        "name": "isBurnable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11773,
                        "src": "1582:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f696e206e6f74206275726e61626c65",
                        "id": 11806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1594:19:30",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2531d6976c37a970711737014a9a4dfc20f207639645a349ade5c8893e2b4f1",
                          "typeString": "literal_string \"Coin not burnable\""
                        },
                        "value": "Coin not burnable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e2531d6976c37a970711737014a9a4dfc20f207639645a349ade5c8893e2b4f1",
                          "typeString": "literal_string \"Coin not burnable\""
                        }
                      ],
                      "id": 11804,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        31499,
                        31500
                      ],
                      "referencedDeclaration": 31500,
                      "src": "1574:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1574:40:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11808,
                  "nodeType": "ExpressionStatement",
                  "src": "1574:40:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11812,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11799,
                        "src": "1639:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11813,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11801,
                        "src": "1645:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11809,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31603,
                        "src": "1624:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Plus_$11952",
                          "typeString": "contract super ERC20Plus"
                        }
                      },
                      "id": 11811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21384,
                      "src": "1624:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1624:27:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11815,
                  "nodeType": "ExpressionStatement",
                  "src": "1624:27:30"
                }
              ]
            },
            "documentation": "@dev Burns a specific amount of tokens from the target address and decrements allowance\n@param from address The address which you want to send tokens from\n@param value uint256 The amount of token to be burned",
            "id": 11817,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11799,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 11817,
                  "src": "1469:12:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11798,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1469:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11801,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 11817,
                  "src": "1483:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11800,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1483:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1468:29:30"
            },
            "returnParameters": {
              "id": 11803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1505:0:30"
            },
            "scope": 11952,
            "src": "1451:207:30",
            "stateMutability": "nonpayable",
            "superFunction": 21384,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11837,
              "nodeType": "Block",
              "src": "1968:154:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11827,
                        "name": "isMintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11777,
                        "src": "2045:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f696e206e6f74206d696e7461626c65",
                        "id": 11828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2057:19:30",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_370a2ae712710fa7dd456ad47506a66c523ccaf97e6b4687d3a6ee5aaa77560f",
                          "typeString": "literal_string \"Coin not mintable\""
                        },
                        "value": "Coin not mintable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_370a2ae712710fa7dd456ad47506a66c523ccaf97e6b4687d3a6ee5aaa77560f",
                          "typeString": "literal_string \"Coin not mintable\""
                        }
                      ],
                      "id": 11826,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        31499,
                        31500
                      ],
                      "referencedDeclaration": 31500,
                      "src": "2037:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2037:40:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11830,
                  "nodeType": "ExpressionStatement",
                  "src": "2037:40:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11833,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11819,
                        "src": "2105:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11834,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11821,
                        "src": "2109:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11831,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31603,
                        "src": "2094:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Plus_$11952",
                          "typeString": "contract super ERC20Plus"
                        }
                      },
                      "id": 11832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21529,
                      "src": "2094:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 11835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2094:21:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 11825,
                  "id": 11836,
                  "nodeType": "Return",
                  "src": "2087:28:30"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 11838,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11819,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 11838,
                  "src": "1919:10:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11818,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1919:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11821,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 11838,
                  "src": "1931:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11820,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1931:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1918:27:30"
            },
            "returnParameters": {
              "id": 11825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11824,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11838,
                  "src": "1962:4:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11823,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1962:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1961:6:30"
            },
            "scope": 11952,
            "src": "1905:217:30",
            "stateMutability": "nonpayable",
            "superFunction": 21529,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11851,
              "nodeType": "Block",
              "src": "2360:184:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11842,
                        "name": "constructing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11780,
                        "src": "2456:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "746869732066756e6374696f6e2063616e206f6e6c792062652072756e206f6e206372656174696f6e",
                        "id": 11843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2470:43:30",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da2954975739b84494c9442eabda54d34a88c079b31b358bc516f3cbd8ff66b3",
                          "typeString": "literal_string \"this function can only be run on creation\""
                        },
                        "value": "this function can only be run on creation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da2954975739b84494c9442eabda54d34a88c079b31b358bc516f3cbd8ff66b3",
                          "typeString": "literal_string \"this function can only be run on creation\""
                        }
                      ],
                      "id": 11841,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        31499,
                        31500
                      ],
                      "referencedDeclaration": 31500,
                      "src": "2448:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2448:66:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11845,
                  "nodeType": "ExpressionStatement",
                  "src": "2448:66:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11846,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31603,
                        "src": "2524:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Plus_$11952",
                          "typeString": "contract super ERC20Plus"
                        }
                      },
                      "id": 11848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20741,
                      "src": "2524:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 11849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2524:13:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11850,
                  "nodeType": "ExpressionStatement",
                  "src": "2524:13:30"
                }
              ]
            },
            "documentation": "@dev called by the owner to pause, triggers stopped state.\nThis means functions transfer, transferFrom, approve, increaseAllowance,\nand decreasAllowance, will not execute.",
            "id": 11852,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2351:2:30"
            },
            "returnParameters": {
              "id": 11840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2360:0:30"
            },
            "scope": 11952,
            "src": "2337:207:30",
            "stateMutability": "nonpayable",
            "superFunction": 20741,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11860,
              "nodeType": "Block",
              "src": "2862:161:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11856,
                        "name": "constructing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11780,
                        "src": "2958:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "746869732066756e6374696f6e2063616e206f6e6c792062652072756e206f6e206372656174696f6e",
                        "id": 11857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2972:43:30",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da2954975739b84494c9442eabda54d34a88c079b31b358bc516f3cbd8ff66b3",
                          "typeString": "literal_string \"this function can only be run on creation\""
                        },
                        "value": "this function can only be run on creation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da2954975739b84494c9442eabda54d34a88c079b31b358bc516f3cbd8ff66b3",
                          "typeString": "literal_string \"this function can only be run on creation\""
                        }
                      ],
                      "id": 11855,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        31499,
                        31500
                      ],
                      "referencedDeclaration": 31500,
                      "src": "2950:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2950:66:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11859,
                  "nodeType": "ExpressionStatement",
                  "src": "2950:66:30"
                }
              ]
            },
            "documentation": "@dev This will undo pause(). The purpose of this declaration is to\ndisable this function, as this function must not be called (unless\nmaking an untransferable token transferable again is wanted, but\nthis is currently not an offered feature).",
            "id": 11861,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2853:2:30"
            },
            "returnParameters": {
              "id": 11854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2862:0:30"
            },
            "scope": 11952,
            "src": "2837:186:30",
            "stateMutability": "nonpayable",
            "superFunction": 20758,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11950,
              "nodeType": "Block",
              "src": "3486:573:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11895,
                      "name": "isBurnable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11773,
                      "src": "3496:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11896,
                      "name": "isBurnable_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11871,
                      "src": "3509:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3496:24:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11898,
                  "nodeType": "ExpressionStatement",
                  "src": "3496:24:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11899,
                      "name": "isTransferable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11775,
                      "src": "3530:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11900,
                      "name": "isTransferable_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11873,
                      "src": "3547:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3530:32:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11902,
                  "nodeType": "ExpressionStatement",
                  "src": "3530:32:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11903,
                      "name": "isMintable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11777,
                      "src": "3572:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11904,
                      "name": "isMintable_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11875,
                      "src": "3585:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3572:24:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11906,
                  "nodeType": "ExpressionStatement",
                  "src": "3572:24:30"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 11908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3609:16:30",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 11907,
                      "name": "isTransferable_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11873,
                      "src": "3610:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 11913,
                  "nodeType": "IfStatement",
                  "src": "3606:52:30",
                  "trueBody": {
                    "id": 11912,
                    "nodeType": "Block",
                    "src": "3626:32:30",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 11909,
                            "name": "pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              11852
                            ],
                            "referencedDeclaration": 11852,
                            "src": "3640:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 11910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3640:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11911,
                        "nodeType": "ExpressionStatement",
                        "src": "3640:7:30"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 11920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 11915,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11869,
                          "src": "3678:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 11914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3670:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 11916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3670:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 11918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3697:1:30",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 11917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3689:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 11919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3689:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3670:29:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 11926,
                  "nodeType": "IfStatement",
                  "src": "3667:77:30",
                  "trueBody": {
                    "id": 11925,
                    "nodeType": "Block",
                    "src": "3701:43:30",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 11922,
                              "name": "minter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11869,
                              "src": "3726:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 11921,
                            "name": "_addMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20547,
                            "src": "3715:10:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 11923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3715:18:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11924,
                        "nodeType": "ExpressionStatement",
                        "src": "3715:18:30"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 11931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 11927,
                      "name": "initialSupplyOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11879,
                      "src": "3757:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 11929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3787:1:30",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 11928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3779:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 11930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3779:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3757:32:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 11944,
                    "nodeType": "Block",
                    "src": "3854:65:30",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 11940,
                              "name": "initialSupplyOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11879,
                              "src": "3874:18:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 11941,
                              "name": "initialSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11877,
                              "src": "3894:13:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 11939,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21235,
                            "src": "3868:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 11942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3868:40:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11943,
                        "nodeType": "ExpressionStatement",
                        "src": "3868:40:30"
                      }
                    ]
                  },
                  "id": 11945,
                  "nodeType": "IfStatement",
                  "src": "3753:166:30",
                  "trueBody": {
                    "id": 11938,
                    "nodeType": "Block",
                    "src": "3791:57:30",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 11933,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31496,
                                "src": "3811:3:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 11934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3811:10:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 11935,
                              "name": "initialSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11877,
                              "src": "3823:13:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 11932,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21235,
                            "src": "3805:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 11936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3805:32:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11937,
                        "nodeType": "ExpressionStatement",
                        "src": "3805:32:30"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11946,
                      "name": "constructing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11780,
                      "src": "4032:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 11947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4047:5:30",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4032:20:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11949,
                  "nodeType": "ExpressionStatement",
                  "src": "4032:20:30"
                }
              ]
            },
            "documentation": null,
            "id": 11951,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 11882,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11863,
                    "src": "3332:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11883,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11865,
                    "src": "3339:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11884,
                    "name": "decimals_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11867,
                    "src": "3348:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 11885,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11881,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 21502,
                  "src": "3318:13:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$21502_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3318:40:30"
              },
              {
                "arguments": [],
                "id": 11887,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11886,
                  "name": "ERC20Mintable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 21530,
                  "src": "3371:13:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$21530_$",
                    "typeString": "type(contract ERC20Mintable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3371:15:30"
              },
              {
                "arguments": [],
                "id": 11889,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11888,
                  "name": "ERC20Burnable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 21385,
                  "src": "3399:13:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Burnable_$21385_$",
                    "typeString": "type(contract ERC20Burnable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3399:15:30"
              },
              {
                "arguments": [],
                "id": 11891,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11890,
                  "name": "ERC20Pausable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 21632,
                  "src": "3427:13:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Pausable_$21632_$",
                    "typeString": "type(contract ERC20Pausable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3427:15:30"
              },
              {
                "arguments": [],
                "id": 11893,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11892,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 21351,
                  "src": "3455:5:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$21351_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3455:7:30"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11863,
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11951,
                  "src": "3050:19:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11862,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3050:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11865,
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11951,
                  "src": "3079:21:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11864,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3079:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11867,
                  "name": "decimals_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11951,
                  "src": "3110:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 11866,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3110:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11869,
                  "name": "minter",
                  "nodeType": "VariableDeclaration",
                  "scope": 11951,
                  "src": "3135:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11868,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3135:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11871,
                  "name": "isBurnable_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11951,
                  "src": "3159:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11870,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3159:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11873,
                  "name": "isTransferable_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11951,
                  "src": "3185:20:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11872,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3185:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11875,
                  "name": "isMintable_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11951,
                  "src": "3215:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11874,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3215:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11877,
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 11951,
                  "src": "3241:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11876,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3241:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11879,
                  "name": "initialSupplyOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 11951,
                  "src": "3269:26:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3269:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3040:265:30"
            },
            "returnParameters": {
              "id": 11894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3486:0:30"
            },
            "scope": 11952,
            "src": "3029:1030:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 11996,
        "src": "687:3374:30"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11953,
              "name": "ERC20Capped",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21444,
              "src": "4231:11:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Capped_$21444",
                "typeString": "contract ERC20Capped"
              }
            },
            "id": 11954,
            "nodeType": "InheritanceSpecifier",
            "src": "4231:11:30"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11955,
              "name": "ERC20Plus",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11952,
              "src": "4244:9:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Plus_$11952",
                "typeString": "contract ERC20Plus"
              }
            },
            "id": 11956,
            "nodeType": "InheritanceSpecifier",
            "src": "4244:9:30"
          }
        ],
        "contractDependencies": [
          11952,
          20376,
          20564,
          20671,
          20759,
          21351,
          21385,
          21444,
          21502,
          21530,
          21632,
          21701
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20PlusCapped\n@dev ERC20 Token, which acts very similarly to ERC20Plus, but with the\nexception that it has a cap.",
        "fullyImplemented": true,
        "id": 11995,
        "linearizedBaseContracts": [
          11995,
          11952,
          21632,
          20759,
          20671,
          21385,
          21444,
          21530,
          20564,
          21351,
          21502,
          21701,
          20376
        ],
        "name": "ERC20PlusCapped",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 11993,
              "nodeType": "Block",
              "src": "4966:7:30",
              "statements": []
            },
            "documentation": null,
            "id": 11994,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 11979,
                    "name": "cap_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11968,
                    "src": "4639:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 11980,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11978,
                  "name": "ERC20Capped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 21444,
                  "src": "4627:11:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Capped_$21444_$",
                    "typeString": "type(contract ERC20Capped)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4627:17:30"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 11982,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11958,
                    "src": "4721:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11983,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11960,
                    "src": "4744:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11984,
                    "name": "decimals_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11962,
                    "src": "4769:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11985,
                    "name": "minter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11964,
                    "src": "4796:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11986,
                    "name": "isBurnable_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11966,
                    "src": "4820:11:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11987,
                    "name": "isTransferable_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11970,
                    "src": "4849:15:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11988,
                    "name": "isMintable_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11972,
                    "src": "4882:11:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11989,
                    "name": "initialSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11974,
                    "src": "4911:13:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11990,
                    "name": "initialSupplyOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11976,
                    "src": "4942:18:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 11991,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11981,
                  "name": "ERC20Plus",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11952,
                  "src": "4694:9:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Plus_$11952_$",
                    "typeString": "type(contract ERC20Plus)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4694:267:30"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11958,
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11994,
                  "src": "4282:19:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11957,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4282:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11960,
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11994,
                  "src": "4311:21:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11959,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4311:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11962,
                  "name": "decimals_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11994,
                  "src": "4342:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 11961,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4342:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11964,
                  "name": "minter",
                  "nodeType": "VariableDeclaration",
                  "scope": 11994,
                  "src": "4367:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4367:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11966,
                  "name": "isBurnable_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11994,
                  "src": "4391:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11965,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4391:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11968,
                  "name": "cap_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11994,
                  "src": "4417:9:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11967,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4417:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11970,
                  "name": "isTransferable_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11994,
                  "src": "4436:20:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11969,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4436:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11972,
                  "name": "isMintable_",
                  "nodeType": "VariableDeclaration",
                  "scope": 11994,
                  "src": "4466:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11971,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4466:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11974,
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 11994,
                  "src": "4492:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11973,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4492:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11976,
                  "name": "initialSupplyOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 11994,
                  "src": "4520:26:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4520:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4272:284:30"
            },
            "returnParameters": {
              "id": 11992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4966:0:30"
            },
            "scope": 11995,
            "src": "4261:712:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 11996,
        "src": "4203:772:30"
      }
    ],
    "src": "0:4975:30"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-12-03T18:31:09.907Z",
  "devdoc": {
    "details": "ERC20 Token, where all tokens (INITIAL_SUPPLY) are pre-assigned to the creator. Note they can later distribute these tokens as they wish using `transfer` and other `ERC20` functions. Depending on the parameters provided, this token can be mintable, burnable and/or pausable (non-transferable).",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Burns a specific amount of tokens.",
        "params": {
          "value": "The amount of token to be burned."
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Burns a specific amount of tokens from the target address and decrements allowance",
        "params": {
          "from": "address The address which you want to send tokens from",
          "value": "uint256 The amount of token to be burned"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "pause()": {
        "details": "called by the owner to pause, triggers stopped state. This means functions transfer, transferFrom, approve, increaseAllowance, and decreasAllowance, will not execute."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "unpause()": {
        "details": "This will undo pause(). The purpose of this declaration is to disable this function, as this function must not be called (unless making an untransferable token transferable again is wanted, but this is currently not an offered feature)."
      }
    },
    "title": "ERC20Plus"
  },
  "userdoc": {
    "methods": {}
  }
}